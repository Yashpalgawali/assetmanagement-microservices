package com.example.demo.department_service.controller;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.department_service.dto.Company;
import com.example.demo.department_service.dto.DepartmentDto;
import com.example.demo.department_service.dto.ErrorResponseDto;
import com.example.demo.department_service.entity.Department;
import com.example.demo.department_service.proxy.CompanyServiceProxy;
import com.example.demo.department_service.service.IDepartmentService;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping("department") @AllArgsConstructor
public class DepartmentController {

	private final IDepartmentService deptserv;
	
	private final CompanyServiceProxy companyProxy;
	
	@PostMapping("/")
	public ResponseEntity<ResponseDto> saveDepartment(@RequestBody Department department)
	{	
		Department dept = deptserv.saveDepartment(department);
		return ResponseEntity.status(HttpStatus.CREATED).body(dept);
	}
	
	@GetMapping("/")
	public ResponseEntity<List<DepartmentDto>> getAllDepartments() {
		List<Department> deptList = deptserv.getAllDepartments();
		
		List<DepartmentDto> dept_list = deptList.stream().map(dept -> {
			ResponseEntity<Company> company = companyProxy.getCompanyById(dept.getComp_id());
			
			DepartmentDto deptdto = new DepartmentDto();
			deptdto.setDept_id(dept.getDept_id());
			deptdto.setDept_name(dept.getDept_name());
			deptdto.setCompany(company.getBody());
			return deptdto;
			
		}).collect(Collectors.toList());
		return ResponseEntity.status(HttpStatus.OK).body(dept_list);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<DepartmentDto> getDepartmentbyId(@PathVariable Integer id) {
		
		Department department = deptserv.getDepartmentById(id);
		DepartmentDto deptDto = new DepartmentDto();
		deptDto.setDept_id(department.getDept_id());
		deptDto.setDept_name(department.getDept_name());
		
		ResponseEntity<Company> company = companyProxy.getCompanyById(department.getComp_id());
		
		deptDto.setCompany(company.getBody());
		
		return ResponseEntity.status(HttpStatus.OK).body(deptDto);
	}
}
