package com.example.demo.employee_service.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.employee_service.dto.ResponseDto;
import com.example.demo.employee_service.entity.Employee;
import com.example.demo.employee_service.service.IEmployeeService;

import lombok.AllArgsConstructor;

@RestController
@AllArgsConstructor
@RequestMapping("employee")
public class EmployeeController {

	private final IEmployeeService empserv;

	@PostMapping("/")
	public ResponseEntity<ResponseDto> saveEmployee(@RequestBody Employee employee) {

		Employee emp = empserv.saveEmployee(employee);
		if (emp != null) {
			return ResponseEntity.status(HttpStatus.CREATED).body(new ResponseDto(HttpStatus.CREATED.toString(),
					"Employee " + emp.getEmp_name() + " is saved successfully"));
		} else {
			return ResponseEntity.status(HttpStatus.CREATED).body(null);
		}
	}

	@GetMapping("/")
	public ResponseEntity<List<Employee>> getAllEmployees() {
		return ResponseEntity.status(HttpStatus.OK).body(empserv.getAllEmployees());
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable Integer id) {
		
		return ResponseEntity.status(HttpStatus.OK).body(empserv.getEmployeeById(id));
	}
	
	@PutMapping("/")
	public ResponseEntity<ResponseDto> updateEmployee(@RequestBody Employee employee) {

		int result = empserv.updateEmployee(employee);
		if (result > 0) {
			return ResponseEntity.status(HttpStatus.OK).body(new ResponseDto(HttpStatus.OK.toString(),
					"Employee " + employee.getEmp_name() + " is updated successfully"));
		} else {
			return ResponseEntity.status(HttpStatus.NOT_MODIFIED).body(new ResponseDto(
					HttpStatus.NOT_MODIFIED.toString(), "Employee " + employee.getEmp_name() + " is not updated "));
		}
	}
}
