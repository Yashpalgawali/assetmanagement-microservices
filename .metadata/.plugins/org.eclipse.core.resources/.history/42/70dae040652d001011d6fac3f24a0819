package com.example.demo.asset_service.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.example.demo.asset_service.dto.ResponseDto;
import com.example.demo.asset_service.entity.Asset;
import com.example.demo.asset_service.service.IAssetService;

import lombok.AllArgsConstructor;


@AllArgsConstructor
public class AssetController {

	private final IAssetService assetserv;

	@PostMapping("/")
	public ResponseEntity<ResponseDto> saveAssetType(@RequestBody Asset asset) {
		Asset assetObj = assetserv.saveAsset(asset);
		if(assetObj!=null) {
			return ResponseEntity.status(HttpStatus.CREATED).body(new ResponseDto(HttpStatus.CREATED.toString(),"Asset type "+asset.getAsset_name()+" is saved successfully "));
		}
		else {
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(new ResponseDto(HttpStatus.INTERNAL_SERVER_ERROR.toString().toString(),"Asset type "+asset.getAsset_name()+" is not saved "));
		}
	}
	
	@GetMapping("/")
	public ResponseEntity<List<Asset>> getAllAssetTypes() {
		 List<Asset> assetlist = assetserv.getAllAssets();
		if(assetlist.size()>0) {
			return ResponseEntity.status(HttpStatus.OK).body(assetlist);
		}
		else {
			return ResponseEntity.status(HttpStatus.NO_CONTENT).body(null);
		}
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Asset> getAssettypeById(@PathVariable Integer id) {
		Asset assest = assetserv.getAssetById(id);
		return ResponseEntity.status(HttpStatus.OK).body(assest);
	}
	
	@PutMapping("/")
	public ResponseEntity<ResponseDto> updateAssetType(@RequestBody Asset asset) {
		int result = assetserv.updateAsset(asset);
		if(result > 0) {
			return ResponseEntity.status(HttpStatus.OK).body(new ResponseDto(HttpStatus.OK.toString(),"Asset type "+asset.getAsset_name()+" is updated "));
		}
		else {
			return ResponseEntity.status(HttpStatus.NOT_MODIFIED).body(new ResponseDto(HttpStatus.NOT_MODIFIED.toString().toString(),"Asset type "+asset.getAsset_name()+" is not updated "));
		}
	}
}
